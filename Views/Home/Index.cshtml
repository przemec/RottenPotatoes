@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model dynamic
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to RottenPotatoes</h1>
    <h3 class="display-7" style="font-weight: 300;">Browse Your favourite movies and rate them!</h3>
    <div style="margin-top: 30px;" class="container-fluid">
        <table class="table">
            <tr>
                <td>
                    <strong>Title</strong>
                </td>
                <td>
                    <strong>Director</strong>
                </td>
                <td>
                    <strong>Score</strong>
                </td>
                @if (User.Identity.Name == "Admin")
                {
                    <td></td>
                }
            </tr>
            @foreach (var movie in Model.Movies)
            {
                <tr>
                    <td>
                        <a class="nav-link text-dark" style="text-decoration: underline;" asp-controller="Home"
                        asp-action="MovieDetails" asp-route-movieid="@movie.MovieId">@movie.Title</a>
                    </td>
                    <td style="vertical-align: middle;">
                        @movie.Director
                    </td>
                    <td style="vertical-align: middle;">
                        @try
                        {
                            @(Math.Round(Model.Votes[movie.MovieId][0], 1));@:/5
                        }
                        catch (KeyNotFoundException)
                        {
                            @:No score
                        }
                    </td>
                    @if (User.Identity.Name == "Admin")
                    {
                        <td>
                            <a class="btn btn-primary text-white" asp-controller="Home" asp-action="EditMovie" asp-route-movieid="@movie.MovieId">Edit</a>
                            @Html.ActionLink(
                                "Remove", 
                                "RemoveMovie", 
                                "Home", 
                                new { movieid = @movie.MovieId }, 
                                new { 
                                    onclick = $"return confirm('Do you really want to remove {@movie.Title} from database?')", 
                                    @style="text-decoration: none; width: 90px;",
                                    @class="btn btn-outline-primary"
                                }
                            )
                        </td>
                    }
                </tr>
            }
            @if (User.Identity.Name == "Admin")
            {
                <tr>
                    <td colspan="3" style="vertical-align: middle;">Add new movie to database</td>
                    <td>
                        @Html.ActionLink(
                            "Add new", 
                            "AddMovie", 
                            "Home", 
                            null, 
                            new {
                                @style="text-decoration: none; color: white; width: 154px;",
                                @class="btn btn-success text-white"
                            }
                        )
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
